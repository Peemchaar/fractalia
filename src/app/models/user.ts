import { CompanyUser } from './companyUser';
import { Generic } from './generic';

export class User {
    id: number;
    eid: string;
    username: string;
    password: string;
    name: string;
    surname: string;
    surname2: string;
    adress: string;
    city: string;
    postalcode: string;
    country: string;
    countryCode: string;
    phone: string;
    phone2: string;
    email: string;
    token: string;
    code: string;
    lan: string;
    codeId: number;
    partnerId: number;
    languageId: number;
    languageCode: string;
    roleId: number;
    role: string;
    selSuiteColor: string;
    inJira: boolean;
    active: boolean;
    roleName: boolean;
    logo: string;
    creation: Date;
    checkTermsAcceptDate: boolean;
    profileImage: string;
    hasAcronisRequested: number;
    userSuites: Generic[];
    partnerName:string;
    recover:string;
    companyName: string;
    companyIdentification: string;
    companyAddress: string;
    companyPhones: string;
    companyAuthorizedFullname: string;
    companyAuthorizedPhones: string;
    companyMaxNumLicensesAllowed:number;
    isAdminUserId: boolean;
    companyUser: CompanyUser;
    adminUserId:number;
    parentCompanyIdentification:string;
    parentEmail:string;
    parentEid:string;
    typeUser:string;
    parent:string;
    partnerURL:string;
    param:string;
    login:string;
    withCompany:boolean;
    passwordChanged:boolean;
    lote: string;
    activationDate: Date;
    mobilePhone: string;
    expirationDate: Date;
    firstAccessDate: Date;
    lastAccessDate: Date;
    lastPreviousAccessDate: Date;
    cif: string;
    bitdefenderLicenses: string;
    kaperskyLicenses: string;
    identityMonitored: boolean;
    cardsMonitored: boolean;
    suites: Generic[];
    acronisProvisionDate: Date;
    licenseFractel: string;
    stopReminderEmails: boolean;
    tokenSSO: string;
    hasExtDigitalLifeRequested:boolean;
    hasExtDigitalLegacyRequested:boolean;
    hasExtDigitalTestamentRequested:boolean;
    sso:boolean;
    jiraX3:string;
    vip:boolean;
    activeNewsletter:boolean;
}
